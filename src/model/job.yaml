# Initial hypothetical type of job:
#
# Unlike manifests which actually verify data *against* well-defined
# schemata, the job manifest is explicitly data in and of itself,
# verified against this schema. The aim is to generate JSON-LD or RDF
# from this schema + manifest, which is then processed by the RAP.
#
# Here is what the LinkML documentation says:
# [https://linkml.io/linkml/faq/general.html#is-linkml-just-for-metadata]
#
#' "LinkML doesn’t draw any hard and fast distinction between data and
#' metadata, recognizing that “metadata” is often defined in relative
#' terms."
#
id: http://localhost/saved/job/
name: job
title: >-
  SAVED data model: job template specification
prefixes:
  dc:      http://purl.org/dc/elements/1.1/
  dcterms: http://purl.org/dc/terms/
  linkml:  https://w3id.org/linkml/
  pav:     http://purl.org/pav/
  saved:   http://localhost/saved/
imports:
  - linkml:types
default_prefix: saved

slots:
  
  atomic_name:
    description: >-
      Short-form name / atom: lower-case, no special characters excepting underscores
    range:           string
    broad_mappings:
      - saved:name
      - dc:title
    pattern:         "^:?[a-z]+[[a-z]|_|]*$"
    exact_mappings:  dc:identifier
    identifier:      true
    required:        true

  # Not from linkml:types, only in linkml:meta and linkml:datasets
  # Note, linkml:datasets is *not* imported by linkml:meta
  #
  # These are essentially duplicates of terms in Dublin Core,
  # so it is fairly reasonable to duplicate these here too, instead of importing
  # the entire linkml:meta or linkml:datasets
  #
  # Further emphasise once again that job.yaml is being used as the
  # schema for our job manifests, see comment at top of file.
  title:
    description: >-
      A concise human-readable display label for the element. The title should mirror the name,
      and should use ordinary textual punctuation.
    range:           string
    slot_uri:        dcterms:title

  description:
    description:     Human-readable description of the information
    range:           string
    slot_uri:        dcterms:description
    exact_mappings:  linkml:path
    required:        false

  # Table-specific slots to follow:
  hash:
    description:     Checksum of some file
    range:           string
    exact_mappings:  linkml:hash
  resource_hash:
    description:     Checksum of resource
    is_a:            hash
    required:        true
    
  path:
    description:     Path or URI
    range:           uriorcurie
    exact_mappings:  linkml:path
  resource_path:
    description:     Path or URI of resource
    is_a:            path
    required:        true
  schema_path:
    description:     Path or URI of schema associated with resource
    is_a:            path
    required:        true
    
  tables:
    description:     Specification of mappings between resources and schemas, as well as columns or dimensions to bring into into scope
    multivalued:     true
    inlined:         true
    inlined_as_list: true
    range:           TableDesc
    required:        true
    #list_elements_ordered: true

  # Columns scope-specific slots to follow:
  column:
    description:     Column name in table
    range:           string
    multivalued:     false
    required:        true

  variable:
    description:     Name of variable underpinning column, specific to the job
    range:           string
    multivalued:     false
    required:        true

  table:
    description:     Table description from which column is drawn, specifically matching the `atomic_name' field of a given instance of a `TableDesc' class.
    range:           string
    pattern:         "^:?[a-z]+[[a-z]|_|]*$"
    required:        true

  # Job-specific slots to follow:
  job_type:
    description:     Short job type
    range:           string
    pattern:         "^:?[a-z]+[[a-z]|_|]*$"
    required:        true

  scope:
    description:     A collection of column descriptions
    multivalued:     true
    inlined:         true
    inlined_as_list: true
    range:           ColumnDesc
  job_scope_descriptive:
    description:     A collection of column descriptions which describe something about the world
    is_a:            scope
  job_scope_collected:
    description:     A collection of column descriptions which are collected or sampled
    is_a:            scope
  job_scope_modelled:
    description:     A collection of column descriptions which are modelled or simulated
    is_a:            scope
    
  jobs:
    description:     Specification of operations to run on resources and schemas provided
    multivalued:     true
    inlined:         true
    inlined_as_list: true
    required:        true
    range:           JobDesc

  gcp_source:
    description:     GCP account of the generator of the manifest
    range:           string
    required:        false
    
  local_version:
    description:     Version number of local submission utility
    range:           string
    required:        false
    narrow_mappings: pav:version

classes:

  TableDesc:
    description: >-
      Job manifest: data source descriptive attributes
    slots:
      - atomic_name
      - title
      - description
      - resource_path
      - schema_path
      - resource_hash

  ColumnDesc:
    description: >-
      Job manifest: column scope description and annotations

      This has three elements:
        1. The column name
        2. The table from which the column is or columns are drawn
        3. The variable underpinning the column, which is specific to the job.
    slots:
      - column
      - variable
      - table
      
  JobDesc:
    description: >-
      Job manifest: job specification attributes which specific job sub-classes inherit
    slots:
      - atomic_name
      - title
      - job_type
      - job_scope_descriptive
      - job_scope_collected
      - job_scope_modelled
    
  ManifestDesc:
    description: >-
      Job manifest: complete specification
    slots:
      - atomic_name
      - tables
      - jobs
      - gcp_source
      - local_version
